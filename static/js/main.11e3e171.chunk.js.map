{"version":3,"sources":["reportWebVitals.js","components/AddItem.js","components/Item.js","components/List.js","translation/index.js","translation/en/translation.js","translation/rus/translation.js","components/SortFilterPanel.js","components/context/RoleContext.js","components/MenuPanel.js","components/MainContent.js","components/authorize/Registration.js","components/authorize/Login.js","components/admin/ListOfUsers.js","components/admin/ListOfTodos.js","components/admin/AdminPanel.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AddItem","handleAddItem","useState","itemName","setItemName","value","onChange","e","target","onPressEnter","preventDefault","Item","t","item","handleEditItem","handleDeleteItem","handleError","name","setName","status","done","setDone","loading","setLoading","moment","locale","i18n","language","editName","newName","a","trim","replace","match","Error","length","uuid","changeStatus","newStatus","spinning","justify","className","gutter","align","style","padding","marginTop","span","checked","Text","ellipsis","editable","createdAt","format","danger","type","icon","DeleteOutlined","onClick","List","items","handleOnDragEnd","onDragEnd","droppableId","provided","droppableProps","ref","innerRef","map","todo","index","draggableId","draggableProps","dragHandleProps","placeholder","use","initReactI18next","init","resources","en","translation","quit","all","undone","todoTitle","old","new","signIn","signUp","signInLink","signUpLink","mesInputLogin","mesInputPassword","mesInputConfirm","login","password","confirm","registration","ru","errLoginValid","errPassValid","errConfirm","successRigistr","errItemName","errMeaninglessContent","itemsEmpty","errBadName","myTodos","listUsers","userId","doneTodo","undoneTodo","changeLanguage","SortFilterPanel","filter","sort","handleFilter","handleSort","RoleContext","React","createContext","MenuPanel","handleChangeLanguage","useContext","role","setRole","Option","Select","navigate","useNavigate","key","localStorage","removeItem","includes","selectedKeys","mode","theme","display","justifyContent","defaultValue","MainContent","links","alertMessage","setFilter","setSort","activePage","setActivePage","itemsOnPage","setItemsOnPage","countOfItems","setCountOfItems","pageSize","setPageSize","allTodos","setAllTodos","getItems","link","getTodos","axios","get","headers","Authorization","getItem","res","data","result","rows","push","nextTodo","unshift","prevTodo","count","useEffect","newItem","post","postTodo","params","patch","id","delete","destination","sourceIndex","source","destinationIndex","updateItems","todos","prevTodoIndex","nextTodoIndex","updateTodo","parseInt","dragTodo","splice","slice","todoMoved","minHeight","xxl","xl","lg","md","sm","xs","typeFilter","sortType","marginBottom","number","pagesize","total","defaultCurrent","current","defaultPageSize","pageSizeOptions","hideOnSinglePage","Registration","onFinish","values","newUser","labelCol","wrapperCol","initialValues","remember","onFinishFailed","errorInfo","errorFields","forEach","err","message","errors","autoComplete","label","rules","required","Password","dependencies","hasFeedback","getFieldValue","validator","_","Promise","reject","resolve","offset","htmlType","to","Login","user","setItem","token","ListOfUsers","users","handleSetUser","ListOfTodos","Column","Table","dataSource","rowKey","title","dataIndex","AdminPanel","Header","Layout","Sider","Content","usersOnPage","setUsersOnPage","todosOfUser","setTodosOfUser","userUuid","setUserUuid","getUsers","getTodosOfUser","height","width","position","overflow","marginLeft","backgroundColor","margin","hostName","process","console","log","App","useTranslation","response","text","notification","open","description","Provider","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.11e3e171.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useState } from \"react\";\nimport { Input } from \"antd\";\n\nexport const AddItem = ({ handleAddItem }) => {\n  const [itemName, setItemName] = useState(\"\");\n\n  // this handler has only 1 string\n  // but created this for perhaps change in the future\n  const changeText = (e) => {\n    setItemName(e.target.value);\n  };\n\n  const handlePressEnter = (e) => {\n    e.preventDefault();\n    handleAddItem(e.target.value);\n    setItemName(\"\");\n  };\n\n  return <Input value={itemName} onChange={changeText} onPressEnter={handlePressEnter}></Input>;\n};\n","import { Col, Row, Checkbox, Button, Typography, Spin } from \"antd\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport { useState } from \"react\";\nimport moment from \"moment\";\nimport i18n from \"i18next\";\n\nconst Item = ({ t, item, handleEditItem, handleDeleteItem, handleError }) => {\n  const [name, setName] = useState(item.name);\n  const [done, setDone] = useState(item.status);\n  const [loading, setLoading] = useState(false);\n  moment.locale(i18n.language);\n\n  const editName = async (newName) => {\n    try {\n      setLoading(true);\n      newName = newName.trim().replace(/\\s+/g, \" \");\n\n      if (!newName.match(/[0-9А-Яа-яA-Za-z]/)) throw new Error(t(\"errMeaninglessContent\"));\n      if (newName.length < 2 || newName.length > 100) throw new Error(t(\"errItemName\"));\n\n      await handleEditItem({ name: newName }, item.uuid);\n      setName(newName);\n      setLoading(false);\n    } catch (err) {\n      handleError(err);\n      setLoading(false);\n    }\n  };\n\n  const changeStatus = async (newStatus) => {\n    try {\n      setLoading(true);\n      await handleEditItem({ status: newStatus }, item.uuid);\n      setDone(newStatus);\n      setLoading(false);\n    } catch (err) {\n      handleError(err);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Spin spinning={loading}>\n      <Row\n        justify=\"center\"\n        className=\"item\"\n        gutter={[20, 0]}\n        align=\"middle\"\n        style={{ padding: 20, marginTop: 10 }}\n      >\n        <Col span={3} className=\"item-data\">\n          <Checkbox checked={done ? true : false} onChange={() => changeStatus(!done)}></Checkbox>\n        </Col>\n        <Col span={14} className=\"item-data\">\n          <Typography.Text className=\"item-name\" ellipsis={true} editable={{ onChange: editName }}>\n            {name}\n          </Typography.Text>\n        </Col>\n        <Col span={5}>{moment(item.createdAt).format(\"lll\")}</Col>\n        <Col span={2}>\n          <Button\n            danger={true}\n            type=\"primary\"\n            icon={<DeleteOutlined />}\n            onClick={() => {\n              handleDeleteItem(item.uuid);\n            }}\n          ></Button>\n        </Col>\n      </Row>\n    </Spin>\n  );\n};\n\nexport default Item;\n","import Item from \"./Item\";\nimport { Col } from \"antd\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nexport const List = ({\n  t,\n  items,\n  handleEditItem,\n  handleDeleteItem,\n  handleOnDragEnd,\n  handleError,\n}) => {\n  return (\n    <DragDropContext onDragEnd={handleOnDragEnd}>\n      <Droppable droppableId=\"todos\">\n        {(provided) => (\n          <Col span={24} className=\"todos\" {...provided.droppableProps} ref={provided.innerRef}>\n            {items.map((todo, index) => {\n              return (\n                <Draggable key={todo.uuid} draggableId={todo.name} index={index}>\n                  {(provided) => (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                    >\n                      <Item\n                        t={t}\n                        item={todo}\n                        handleEditItem={handleEditItem}\n                        handleDeleteItem={handleDeleteItem}\n                        handleError={handleError}\n                      />\n                    </div>\n                  )}\n                </Draggable>\n              );\n            })}\n            {provided.placeholder}\n          </Col>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\nimport Rus from \"./rus/translation.js\";\nimport En from \"./en/translation.js\";\n\ni18n.use(initReactI18next).init({\n  resources: {\n    en: {\n      translation: En,\n    },\n    ru: {\n      translation: Rus,\n    },\n  },\n});\n\ni18n.changeLanguage(\"en\");\n","// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  quit: \"Quit\",\n  all: \"All\",\n  done: \"Done\",\n  undone: \"Undone\",\n  todoTitle: \"Todo\",\n  old: \"Old\",\n  new: \"New\",\n  signIn: \"Sign In\",\n  signUp: \"Sign Up\",\n  signInLink: \"Account already have\",\n  signUpLink: \"Registration\",\n  mesInputLogin: \"Please input your login!\",\n  mesInputPassword: \"Please input your password!\",\n  mesInputConfirm: \"Please confirm your password!\",\n  login: \"Login\",\n  password: \"Password\",\n  confirm: \"Confirm password\",\n  registration: \"Registration\",\n  ru: \"Русский\",\n  en: \"English\",\n  errLoginValid:\n    \"bad login validation, need 4-100 symbols and must with letters and can with numbers\",\n  errPassValid: \"need more difficult password, uisng only a-b and numbers\",\n  errConfirm: \"confirm and passwor must be equal\",\n  successRigistr: \"Success registration\",\n  errItemName: \"Need more, than 1 symbol and less, than 100\",\n  errMeaninglessContent: \"meaningless content\",\n  itemsEmpty: \"list is empty\",\n  errBadName: \"Invalid name\",\n  myTodos: \"My todos\",\n  listUsers: \"List of users\",\n  name: \"Name\",\n  status: \"Status\",\n  createdAt: \"Created at\",\n  index: \"Index\",\n  userId: \"User ID\",\n  doneTodo: \"Done\",\n  undoneTodo: \"Undone\",\n};\n","// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  quit: \"Выйти\",\n  all: \"Все\",\n  done: \"Сделанные\",\n  undone: \"Не сделанные\",\n  todoTitle: \"Список дел\",\n  old: \"Старые\",\n  new: \"Новые\",\n  signIn: \"Войти\",\n  signUp: \"Зарегистрироваться\",\n  signInLink: \"Уже есть аккаунт\",\n  signUpLink: \"Регистрация\",\n  mesInputLogin: \"Пожалуйста, введите логин!\",\n  mesInputPassword: \"Пожалуйста, введите пароль!\",\n  mesInputConfirm: \"Пожалуйста, повторите пароль!\",\n  login: \"Логин\",\n  password: \"Пароль\",\n  confirm: \"Подтверждение пароля\",\n  registration: \"Регистрация\",\n  ru: \"Русский\",\n  en: \"English\",\n  errLoginValid:\n    \"логин должен быть от 4 до 100 символов, обязательно с буквой и может быть с цифрой\",\n  errPassValid: \"нужен более сложный пароль, используя только буквы и цифры\",\n  errConfirm: \"подтверждаение и пароль должны быть одинаковы\",\n  successRigistr: \"Успешная регистрация\",\n  errItemName: \"Нужно больше чем 1 и меньше чем 100 символов\",\n  errMeaninglessContent: \"бессмысленный контент\",\n  itemsEmpty: \"список пуст\",\n  errBadName: \"Некорректное имя\",\n  myTodos: \"Мой список дел\",\n  listUsers: \"Список пользователей\",\n  name: \"Название\",\n  status: \"Статус\",\n  createdAt: \"Создан\",\n  index: \"Индекс\",\n  userId: \"ID пользователя\",\n  doneTodo: \"Сделана\",\n  undoneTodo: \"Не сделана\",\n};\n","import { Row, Button, Col } from \"antd\";\nimport \"../translation/index.js\";\n\nexport const SortFilterPanel = ({ t, filter, sort, handleFilter, handleSort }) => {\n  return (\n    <Row style={{ marginTop: 10 }}>\n      <Col span={12}>\n        <Row>\n          <Button\n            type={filter === \"all\" ? \"primary\" : \"default\"}\n            onClick={() => handleFilter(\"all\")}\n          >\n            {t(\"all\")}\n          </Button>\n          <Button\n            type={filter === \"done\" ? \"primary\" : \"default\"}\n            onClick={() => handleFilter(\"done\")}\n          >\n            {t(\"done\")}\n          </Button>\n          <Button\n            type={filter === \"undone\" ? \"primary\" : \"default\"}\n            onClick={() => handleFilter(\"undone\")}\n          >\n            {t(\"undone\")}\n          </Button>\n        </Row>\n      </Col>\n      <Col span={12}>\n        <Row justify=\"end\">\n          <Button type={sort === \"asc\" ? \"primary\" : \"default\"} onClick={() => handleSort(\"asc\")}>\n            {t(\"old\")}\n          </Button>\n          <Button type={sort === \"desc\" ? \"primary\" : \"default\"} onClick={() => handleSort(\"desc\")}>\n            {t(\"new\")}\n          </Button>\n        </Row>\n      </Col>\n    </Row>\n  );\n};\n","import React from \"react\";\nexport const RoleContext = React.createContext();\n","import { useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Menu, Select } from \"antd\";\nimport i18n from \"i18next\";\nimport \"../translation/index.js\";\nimport { RoleContext } from \"./context/RoleContext.js\";\n\nexport const MenuPanel = ({ t, handleChangeLanguage }) => {\n  const [role, setRole] = useContext(RoleContext);\n  const { Option } = Select;\n  const navigate = useNavigate();\n\n  const handleClickMenu = ({ key }) => {\n    if (key === \"logout\") {\n      localStorage.removeItem(\"accessToken\");\n      setRole(\"\");\n    }\n    if (key.includes(\"/\")) navigate(key);\n  };\n\n  return (\n    <Menu\n      onClick={handleClickMenu}\n      selectedKeys={[]}\n      mode=\"horizontal\"\n      theme=\"dark\"\n      style={{ display: \"flex\", justifyContent: \"end\" }}\n    >\n      <Menu.Item key=\"/todos\">{t(\"myTodos\")}</Menu.Item>\n      {role === \"admin\" && <Menu.Item key=\"/users\">{t(\"listUsers\")}</Menu.Item>}\n      <Menu.Item key=\"languages\">\n        <Select defaultValue={i18n.language} onChange={handleChangeLanguage}>\n          <Option value=\"ru\">{t(\"ru\")}</Option>\n          <Option value=\"en\">{t(\"en\")}</Option>\n        </Select>\n      </Menu.Item>\n      <Menu.Item key=\"/login\" danger={true}>\n        {t(\"quit\")}\n      </Menu.Item>\n    </Menu>\n  );\n};\n","import { useContext, useEffect, useState } from \"react\";\nimport { AddItem } from \"./AddItem\";\nimport { List } from \"./List\";\nimport { SortFilterPanel } from \"./SortFilterPanel\";\nimport { Col, Pagination, Row, Spin } from \"antd\";\nimport axios from \"axios\";\nimport \"../translation/index.js\";\nimport { MenuPanel } from \"./MenuPanel\";\n\nexport const MainContent = ({ t, links, handleError, handleChangeLanguage, alertMessage }) => {\n  const [filter, setFilter] = useState(\"all\");\n  const [sort, setSort] = useState(\"desc\");\n  const [activePage, setActivePage] = useState(1);\n  const [itemsOnPage, setItemsOnPage] = useState([]);\n  const [countOfItems, setCountOfItems] = useState(0);\n  const [pageSize, setPageSize] = useState(5);\n  const [loading, setLoading] = useState(false);\n  const [allTodos, setAllTodos] = useState([]);\n\n  const getItems = async () => {\n    try {\n      const link = `${links.getTodos}?filterBy=${filter}&sortBy=${sort}&page=${activePage}&pageSize=${pageSize}`;\n      const res = await axios.get(link, {\n        headers: {\n          Authorization: localStorage.getItem(\"accessToken\"),\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const data = res.data.result;\n      setItemsOnPage(data.rows);\n\n      const allTodos = [...data.rows];\n      allTodos.push(data.nextTodo);\n      allTodos.unshift(data.prevTodo);\n      setAllTodos(allTodos);\n      setCountOfItems(data.count);\n\n      if (data.count === 0) {\n        alertMessage(t(\"itemsEmpty\"), \"info\");\n      }\n    } catch (err) {\n      handleError(err);\n    }\n  };\n\n  useEffect(() => {\n    getItems();\n  }, [sort, filter, activePage, pageSize]);\n\n  const handleAddItem = async (name) => {\n    try {\n      name = name.trim().replace(/\\s+/g, \" \");\n      if (!name) throw new Error(t(\"errBadName\"));\n      if (!name.match(/[0-9А-Яа-яA-Za-z]/)) throw new Error(t(\"errMeaninglessContent\"));\n      if (name.length < 2 || name.length > 100) throw new Error(t(\"errItemName\"));\n      setLoading(true);\n      const newItem = { name, done: false };\n      await axios.post(links.postTodo, newItem, {\n        headers: {\n          Authorization: localStorage.getItem(\"accessToken\"),\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      getItems();\n      setFilter(\"all\");\n      setSort(\"desc\");\n      setActivePage(1);\n      setLoading(false);\n    } catch (err) {\n      handleError(err);\n      setLoading(false);\n    }\n  };\n\n  const handleFilteredItems = (typeFilter = \"all\") => {\n    setFilter(typeFilter);\n    setActivePage(1);\n  };\n\n  const handleSort = (sortType = \"new\") => {\n    setSort(sortType);\n    setActivePage(1);\n  };\n\n  const handleEditItem = async (params, uuid) => {\n    await axios.patch(`${links.postTodo}/${uuid}`, params, {\n      headers: {\n        Authorization: localStorage.getItem(\"accessToken\"),\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    typeof params.status === \"boolean\" && getItems();\n  };\n\n  const handleDeleteItem = async (id) => {\n    try {\n      setLoading(true);\n      await axios.delete(`${links.postTodo}/${id}`, {\n        headers: {\n          Authorization: localStorage.getItem(\"accessToken\"),\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      itemsOnPage.length === 1 && countOfItems > 1\n        ? setActivePage(activePage - 1)\n        : await getItems();\n      setLoading(false);\n    } catch (err) {\n      handleError(err);\n      setLoading(false);\n    }\n  };\n\n  const handlePagination = (number, pagesize) => {\n    setActivePage(number);\n    setPageSize(pagesize);\n  };\n\n  const handleOnDragEnd = async (result) => {\n    if (!result.destination) return;\n    try {\n      //index of todo, which dragged\n      const sourceIndex = result.source.index + 1;\n\n      //index of todo, which on dropped\n      const destinationIndex = result.destination.index + 1;\n\n      if (sourceIndex === destinationIndex) {\n        setLoading(false);\n        return void 0;\n      }\n      const updateItems = [...allTodos];\n      const todos = {};\n\n      //check from where dragged, from top to bottom or else\n      if (sourceIndex > destinationIndex) {\n        todos.prevTodoIndex = updateItems[destinationIndex - 1]?.index;\n        todos.nextTodoIndex = updateItems[destinationIndex]?.index;\n      } else {\n        todos.prevTodoIndex = updateItems[destinationIndex]?.index;\n        todos.nextTodoIndex = updateItems[destinationIndex + 1]?.index;\n      }\n      //---end check\n\n      const updateTodo = {\n        uuid: updateItems[sourceIndex].uuid,\n        name: updateItems[sourceIndex].name,\n      };\n      updateTodo.index = (todos.nextTodoIndex + todos.prevTodoIndex) / 2;\n      updateItems[sourceIndex].index = parseInt(updateTodo.index);\n\n      // swap position on front end(so that not to use get request)\n      const dragTodo = updateItems.splice(sourceIndex, 1)[0];\n      updateItems.splice(destinationIndex, 0, dragTodo);\n      setAllTodos(updateItems);\n      setItemsOnPage(updateItems.slice(1, itemsOnPage.length + 1).filter((item) => item.uuid));\n      //---end swap\n\n      await axios.patch(\n        links.todoMoved,\n        { todo: updateTodo },\n        {\n          headers: {\n            Authorization: localStorage.getItem(\"accessToken\"),\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      setLoading(false);\n    } catch (err) {\n      handleError(err);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <>\n      {localStorage.getItem(\"accessToken\") && (\n        <>\n          <MenuPanel t={t} handleChangeLanguage={handleChangeLanguage} />\n          <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{ minHeight: \"80vh\" }}>\n            <Col xxl={12} xl={13} lg={16} md={20} sm={22} xs={23}>\n              <Row justify=\"center\">\n                <h2>{t(\"todoTitle\")}</h2>\n              </Row>\n              <Row justify=\"center\">\n                <AddItem handleAddItem={handleAddItem} />\n              </Row>\n              <SortFilterPanel\n                t={t}\n                filter={filter}\n                sort={sort}\n                handleFilter={handleFilteredItems}\n                handleSort={handleSort}\n              />\n              <Spin spinning={loading}>\n                <Row justify=\"center\">\n                  <List\n                    t={t}\n                    pageSize={pageSize}\n                    items={itemsOnPage}\n                    handleEditItem={handleEditItem}\n                    handleDeleteItem={handleDeleteItem}\n                    handleOnDragEnd={handleOnDragEnd}\n                    handleError={handleError}\n                  />\n                </Row>\n                <Row justify=\"center\">\n                  <Pagination\n                    style={{ marginBottom: \"50px\", marginTop: 50 }}\n                    onChange={handlePagination}\n                    total={countOfItems}\n                    defaultCurrent={0}\n                    current={activePage}\n                    defaultPageSize={pageSize}\n                    pageSize={pageSize}\n                    pageSizeOptions={[5, 10, 15, 20]}\n                    hideOnSinglePage={true}\n                  />\n                </Row>\n              </Spin>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  );\n};\n","import { Button, Form, Input, Row, Col, Space, Typography, Select } from \"antd\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useContext, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../../translation/index.js\";\nimport i18n from \"i18next\";\nimport { RoleContext } from \"../context/RoleContext.js\";\n\nexport const Registration = ({ t, links, handleError, handleChangeLanguage, alertMessage }) => {\n  const navigate = useNavigate();\n  const [, setRole] = useContext(RoleContext);\n  const { Option } = Select;\n\n  useEffect(() => {\n    localStorage.removeItem(\"accessToken\");\n    setRole(\"\");\n  }, []);\n\n  const onFinish = async (values) => {\n    try {\n      const newUser = values;\n      if (!newUser.login.match(/^(?=.*[A-Za-z])[\\w]{4,100}$/)) throw new Error(t(\"errLoginValid\"));\n\n      if (!newUser.password.match(/^(?=.*[A-Za-z])(?=.*\\d)[\\w]{8,100}$/))\n        throw new Error(t(\"errPassValid\"));\n\n      if (newUser.password !== newUser.confirm) throw new Error(t(\"errConfirm\"));\n\n      await axios.post(links.registration, newUser);\n      alertMessage(t(\"successRigistr\"), \"success\");\n      navigate(\"/login\");\n    } catch (err) {\n      handleError(err);\n    }\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    errorInfo.errorFields.forEach((err) => {\n      errorInfo.message = err.errors[0];\n      handleError(errorInfo);\n    });\n  };\n\n  return (\n    <>\n      <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{ minHeight: \"80vh\" }}>\n        <Col xxl={12} xl={13} lg={16} md={20} sm={22} xs={23}>\n          <Row justify=\"center\">\n            <h2>{t(\"registration\")}</h2>\n          </Row>\n          <Form\n            name=\"basic\"\n            labelCol={{\n              span: 5,\n            }}\n            wrapperCol={{\n              span: 16,\n            }}\n            initialValues={{\n              remember: true,\n            }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n            autoComplete=\"off\"\n          >\n            <Form.Item\n              label={t(\"login\")}\n              name=\"login\"\n              rules={[\n                {\n                  required: true,\n                  message: t(\"mesInputLogin\"),\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              label={t(\"password\")}\n              name=\"password\"\n              rules={[\n                {\n                  required: true,\n                  message: t(\"mesInputPassword\"),\n                },\n              ]}\n            >\n              <Input.Password />\n            </Form.Item>\n            <Form.Item\n              name=\"confirm\"\n              label={t(\"confirm\")}\n              dependencies={[\"password\"]}\n              hasFeedback\n              rules={[\n                {\n                  required: true,\n                  message: t(\"mesInputConfirm\"),\n                },\n                ({ getFieldValue }) => ({\n                  validator(_, value) {\n                    if (!value || getFieldValue(\"password\") === value) {\n                      return Promise.resolve();\n                    }\n                    return Promise.reject(\n                      new Error(\"The two passwords that you entered do not match!\")\n                    );\n                  },\n                }),\n              ]}\n            >\n              <Input.Password />\n            </Form.Item>\n\n            <Row>\n              <Col span={8} offset={5}>\n                <Space>\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    {t(\"signUp\")}\n                  </Button>\n                  <Typography.Text>\n                    <Link to=\"/login\">{t(\"signInLink\")}</Link>\n                  </Typography.Text>\n                </Space>\n              </Col>\n              <Col span={8}>\n                <Row justify=\"end\">\n                  <Select defaultValue={i18n.language} onChange={handleChangeLanguage}>\n                    <Option value=\"ru\">{t(\"ru\")}</Option>\n                    <Option value=\"en\">{t(\"en\")}</Option>\n                  </Select>\n                </Row>\n              </Col>\n            </Row>\n          </Form>\n        </Col>\n      </Row>\n    </>\n  );\n};\n","import { Button, Form, Input, Row, Col, Space, Typography, Select } from \"antd\";\nimport axios from \"axios\";\nimport { useContext, useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"../../translation/index.js\";\nimport i18n from \"i18next\";\nimport { RoleContext } from \"../context/RoleContext.js\";\n\nexport const Login = ({ t, links, handleError, handleChangeLanguage }) => {\n  const navigate = useNavigate();\n  const [, setRole] = useContext(RoleContext);\n  const { Option } = Select;\n  useEffect(() => {\n    localStorage.removeItem(\"accessToken\");\n    setRole(\"\");\n  }, []);\n\n  const onFinish = async (values) => {\n    try {\n      const user = values;\n      const result = await axios.post(links.login, user);\n      localStorage.setItem(\"accessToken\", result.data.token);\n      setRole(result.data.role);\n      navigate(\"/todos\");\n    } catch (err) {\n      handleError(err);\n    }\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    errorInfo.errorFields.forEach((err) => {\n      errorInfo.message = err.errors[0];\n      handleError(errorInfo);\n    });\n  };\n\n  return (\n    <>\n      <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{ minHeight: \"80vh\" }}>\n        <Col xxl={12} xl={13} lg={16} md={20} sm={22} xs={23}>\n          <Row justify=\"center\">\n            <h2>{t(\"login\")}</h2>\n          </Row>\n          <Form\n            name=\"basic\"\n            labelCol={{\n              span: 5,\n            }}\n            wrapperCol={{\n              span: 16,\n            }}\n            initialValues={{\n              remember: true,\n            }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n            autoComplete=\"off\"\n          >\n            <Form.Item\n              label={t(\"login\")}\n              name=\"login\"\n              rules={[\n                {\n                  required: true,\n                  message: t(\"mesInputLogin\"),\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              label={t(\"password\")}\n              name=\"password\"\n              rules={[\n                {\n                  required: true,\n                  message: t(\"mesInputPassword\"),\n                },\n              ]}\n            >\n              <Input.Password />\n            </Form.Item>\n            <Row>\n              <Col offset={5} span={8}>\n                <Space>\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    {t(\"signIn\")}\n                  </Button>\n                  <Typography.Text>\n                    <Link to=\"/registration\">{t(\"signUpLink\")}</Link>\n                  </Typography.Text>\n                </Space>\n              </Col>\n              <Col span={8}>\n                <Row justify=\"end\">\n                  <Select defaultValue={i18n.language} onChange={handleChangeLanguage}>\n                    <Option value=\"ru\">{t(\"ru\")}</Option>\n                    <Option value=\"en\">{t(\"en\")}</Option>\n                  </Select>\n                </Row>\n              </Col>\n            </Row>\n          </Form>\n        </Col>\n      </Row>\n    </>\n  );\n};\n","import { Menu } from \"antd\";\n\nexport const ListOfUsers = ({ users, handleSetUser }) => {\n  return (\n    <>\n      <Menu onClick={handleSetUser} mode=\"inline\" theme=\"dark\">\n        {users.map((user) => {\n          return <Menu.Item key={user.uuid}>{user.login}</Menu.Item>;\n        })}\n      </Menu>\n    </>\n  );\n};\n","import { Table } from \"antd\";\n\nexport const ListOfTodos = ({ t, todos }) => {\n  const { Column } = Table;\n\n  return (\n    <div>\n      <Table dataSource={todos} rowKey={\"uuid\"}>\n        <Column align=\"center\" title={t(\"status\")} dataIndex=\"status\" />\n        <Column align=\"center\" title={t(\"name\")} dataIndex=\"name\" />\n        <Column align=\"center\" title={t(\"createdAt\")} dataIndex=\"createdAt\" />\n        <Column align=\"center\" title={t(\"index\")} dataIndex=\"index\" />\n      </Table>\n    </div>\n  );\n};\n","import { useEffect, useState, useContext } from \"react\";\nimport { Layout, Breadcrumb, Spin } from \"antd\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router\";\nimport { MenuPanel } from \"../MenuPanel\";\nimport { ListOfUsers } from \"./ListOfUsers\";\nimport { ListOfTodos } from \"./ListOfTodos\";\nimport moment from \"moment\";\nimport { RoleContext } from \"../context/RoleContext.js\";\n\nexport const AdminPanel = ({ t, links, handleError, handleChangeLanguage }) => {\n  const [role, setRole] = useContext(RoleContext);\n  const { Header, Sider, Content } = Layout;\n  const [usersOnPage, setUsersOnPage] = useState([]);\n  const [todosOfUser, setTodosOfUser] = useState([]);\n  const [userUuid, setUserUuid] = useState();\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const getUsers = async () => {\n    try {\n      setLoading(true);\n      const result = await axios.get(links.users, {\n        headers: {\n          Authorization: localStorage.getItem(\"accessToken\"),\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      setUsersOnPage(result.data.users);\n      setLoading(false);\n    } catch (err) {\n      setLoading(false);\n      handleError(err);\n    }\n  };\n\n  const getTodosOfUser = async (userId) => {\n    try {\n      const result = await axios.get(`${links.todosOfUser}?userId=${userId}`, {\n        headers: {\n          Authorization: localStorage.getItem(\"accessToken\"),\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const todos = result.data.todos.map((todo) => {\n        todo.status = todo.status ? t(\"doneTodo\") : t(\"undoneTodo\");\n        todo.createdAt = moment(todo.createdAt).format(\"lll\");\n        return todo;\n      });\n      setTodosOfUser(todos);\n    } catch (err) {\n      handleError(err);\n    }\n  };\n\n  useEffect(() => {\n    if (role !== \"admin\") return navigate(\"/todos\");\n    getUsers();\n  }, []);\n\n  const handleSetUser = ({ key }) => {\n    setUserUuid(key);\n    getTodosOfUser(key);\n  };\n\n  return (\n    <Spin spinning={loading}>\n      <MenuPanel t={t} handleChangeLanguage={handleChangeLanguage} />\n      <Layout>\n        <Sider style={{ height: \"95%\", width: \"200px\", position: \"fixed\", overflow: \"auto\" }}>\n          <ListOfUsers t={t} users={usersOnPage} handleSetUser={handleSetUser} />\n        </Sider>\n      </Layout>\n      <Layout style={{ marginLeft: \"200px\" }}>\n        <Header style={{ backgroundColor: \"#e6f7ff\" }}>\n          <Breadcrumb style={{ margin: \"16px 0\" }}>\n            <Breadcrumb.Item>{t(\"userId\")}</Breadcrumb.Item>\n            <Breadcrumb.Item>{userUuid}</Breadcrumb.Item>\n          </Breadcrumb>\n        </Header>\n        <Content>\n          <ListOfTodos t={t} todos={todosOfUser} />\n        </Content>\n      </Layout>\n    </Spin>\n  );\n};\n","import { useState } from \"react\";\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport { MainContent } from \"./components/MainContent\";\nimport { notification } from \"antd\";\nimport { Registration } from \"./components/authorize/Registration\";\nimport { Login } from \"./components/authorize/Login\";\nimport { AdminPanel } from \"./components/admin/AdminPanel\";\nimport i18n from \"i18next\";\nimport { useTranslation } from \"react-i18next\";\nimport \"moment/locale/ru.js\";\nimport { RoleContext } from \"./components/context/RoleContext.js\";\n\nconst hostName = process.env.REACT_APP_LINK;\nconsole.log(hostName);\n\nconst links = {\n  getTodos: `${hostName}/todos`,\n  postTodo: `${hostName}/todo`,\n  login: `${hostName}/login`,\n  registration: `${hostName}/registration`,\n  todoMoved: `${hostName}/todoMoved`,\n  users: `${hostName}/users`,\n  todosOfUser: `${hostName}/todosOfUser`,\n};\n\nfunction App() {\n  const [role, setRole] = useState(\"user\");\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n\n  const handleError = (err) => {\n    if (err.response?.data === \"not admin\") {\n      navigate(\"/todos\");\n      localStorage.setItem(\"role\", \"user\");\n    }\n    if (err.response?.data) {\n      alertMessage(err.response.data, \"error\");\n      return err.response?.data?.includes(\"jwt\") && navigate(\"/login\");\n    }\n    if (err.message) return alertMessage(err.message, \"error\");\n  };\n\n  const handleChangeLanguage = (res) => {\n    i18n.changeLanguage(res);\n  };\n\n  const alertMessage = (text, type) => {\n    notification.open({\n      description: text,\n      type: type,\n    });\n  };\n\n  return (\n    <>\n      <RoleContext.Provider value={[role, setRole]}>\n        <Routes>\n          <Route\n            path=\"/login\"\n            element={\n              <Login\n                t={t}\n                links={links}\n                handleError={handleError}\n                handleChangeLanguage={handleChangeLanguage}\n              />\n            }\n          />\n          <Route\n            path=\"/registration\"\n            element={\n              <Registration\n                t={t}\n                links={links}\n                handleError={handleError}\n                handleChangeLanguage={handleChangeLanguage}\n                alertMessage={alertMessage}\n              />\n            }\n          />\n          <Route\n            path=\"/users\"\n            element={\n              <AdminPanel\n                t={t}\n                links={links}\n                handleError={handleError}\n                handleChangeLanguage={handleChangeLanguage}\n                alertMessage={alertMessage}\n              />\n            }\n          />\n          <Route\n            path=\"/todos\"\n            element={\n              <MainContent\n                t={t}\n                role={role}\n                links={links}\n                handleError={handleError}\n                handleChangeLanguage={handleChangeLanguage}\n                alertMessage={alertMessage}\n              />\n            }\n          />\n          <Route path=\"*\" element={<Navigate replace to=\"/todos\" />} />\n        </Routes>\n      </RoleContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport \"./index.css\";\nimport \"antd/dist/antd.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}